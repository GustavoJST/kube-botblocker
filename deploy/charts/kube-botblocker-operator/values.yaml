# -- Overrides the chart's name.
nameOverride: ""
# -- Overrides the chart's computed fullname
fullnameOverride: ""

crds:
  # -- Whether the helm chart should create and update the CRDs. It is false by default, which implies that the CRDs must be
  # managed independently with the kube-botblocker-operator-crds helm chart.
  # **WARNING**: If set to true, uninstalling the chart (or doing a helm upgrade after setting it back to false)
  # will cause all CRDs and custom resources (IngressConfigs) to be DELETED, causing DATA LOSS
  enabled: false

rbac:
  # -- Creates the necessary RBAC resources
  enabled: true

# -- Whether the operator should watch Ingress resources only in its own namespace or not
currentNamespaceOnly: false

metrics:
  # -- Enables exposure of the operator internal metrics in prometheus format
  enabled: false
  # -- Configures the operator metrics port
  port: 8443
  serviceMonitor:
    # -- Creates a ServiceMonitor object for Prometheus to scrape
    enabled: true
    # -- Additional labels to be added to the created ServiceMonitor
    additionalLabels: {}
    # -- Interval to scrape metrics
    interval: 30s
    # -- Timeout if metrics can't be retrieved in given time interval
    scrapeTimeout: 25s
    # -- MetricRelabelConfigs to apply to samples before ingestion
    metricRelabelings: []
    # -- RelabelConfigs to apply to samples before scraping
    relabelings: []

image:
  # -- Repository path to the controller image
  repository: quay.io/gustavojst/kube-botblocker
  # -- Sets the pull policy for the controller image
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion
  tag: ""
# -- Image pull secrets for pulling images from the registry
imagePullSecrets: []

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to add to the controller Pod
podAnnotations: {}
# -- Labels to add to the controller Pod
podLabels: {}

# -- Security context to add to controller Pod
podSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - "ALL"
  # fsGroup: 2000

# -- Security context to add to controller container
securityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# service:
#   # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#   type: ClusterIP
#   # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#   port: 80

# -- Resources to add to controller container
resources: {}
  # requests:
  #   cpu: 10m
  #   memory: 128Mi

# -- livenessProbe to add to the controller container
livenessProbe:
  initialDelaySeconds: 15
  periodSeconds: 20
  httpGet:
    path: /healthz
    port: 8081

# -- readinessProbe to add to the controller container
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
  httpGet:
    path: /readyz
    port: 8081

# -- Node selectors to add to the controller Pod
nodeSelector: {}
# -- Tolerations to add to the controller Pod
tolerations: []
# -- Affinity to add to the controller Pod
affinity: {}
